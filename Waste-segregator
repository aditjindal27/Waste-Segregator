{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Final_Project_CS_4641.ipynb",
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU",
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "683a758ec5b04a0b9dae4ff583e1b543": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_248a4a9870f04fa28ac53b69ba5b607c",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_452761f46d0d40c7ad7c3a614e21f235",
              "IPY_MODEL_70199fa661bc45e68cdaa441b68ce383",
              "IPY_MODEL_45caae4356ea4eacbe565e3adf2ffb4c"
            ]
          }
        },
        "248a4a9870f04fa28ac53b69ba5b607c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "452761f46d0d40c7ad7c3a614e21f235": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_ca8eb812629a4cbab70fa3917b82adfe",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": "100%",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_77b48205c62b4a7b945a69228b963aee"
          }
        },
        "70199fa661bc45e68cdaa441b68ce383": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_d1730842accf48bb85b1c41d58ce9dd0",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 32342954,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 32342954,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_7370a75ee8dc4288bfb1a332b8e9e46f"
          }
        },
        "45caae4356ea4eacbe565e3adf2ffb4c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_c381ce036996433b8f9c7e99fc769c80",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 30.8M/30.8M [00:00&lt;00:00, 79.0MB/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_81063fb497424e7185e5591c540b3618"
          }
        },
        "ca8eb812629a4cbab70fa3917b82adfe": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "77b48205c62b4a7b945a69228b963aee": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "d1730842accf48bb85b1c41d58ce9dd0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "7370a75ee8dc4288bfb1a332b8e9e46f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c381ce036996433b8f9c7e99fc769c80": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "81063fb497424e7185e5591c540b3618": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "20e02203390b42e0a6a1d16b06979f2c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_56c7f52eabc24bbcb4985ef262dd863b",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_e01c45271c14468cb406e9b7f2624094",
              "IPY_MODEL_08f304a2511f4204a1d718545a57d52d",
              "IPY_MODEL_c88828de85104934ad4bb959a37ebc9d"
            ]
          }
        },
        "56c7f52eabc24bbcb4985ef262dd863b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e01c45271c14468cb406e9b7f2624094": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_22360497d60d43f6920aed81b1d12f58",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": "100%",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_c542bf13e41640be8ac71651a5958cf0"
          }
        },
        "08f304a2511f4204a1d718545a57d52d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_c831c9d24a834bb183a7c22c01785579",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 553433881,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 553433881,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_2e120aa2741e408096961b400ca85195"
          }
        },
        "c88828de85104934ad4bb959a37ebc9d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_e16413ec098045df802c0bb23c5e1eda",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 528M/528M [00:05&lt;00:00, 113MB/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_2919ee1bbd9b403e81c36d0de2fd4f19"
          }
        },
        "22360497d60d43f6920aed81b1d12f58": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "c542bf13e41640be8ac71651a5958cf0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c831c9d24a834bb183a7c22c01785579": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "2e120aa2741e408096961b400ca85195": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e16413ec098045df802c0bb23c5e1eda": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "2919ee1bbd9b403e81c36d0de2fd4f19": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a31c8a0e791840e49f88666e45ac2af9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_fd6b7b4294a04c098387ec2990d40920",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_f5391721ddff4c2da76af863fbd2feff",
              "IPY_MODEL_075109c51ce84f4dbc6943693832cd7f",
              "IPY_MODEL_3931783d126d40e2a3f50b3854bbbb42"
            ]
          }
        },
        "fd6b7b4294a04c098387ec2990d40920": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f5391721ddff4c2da76af863fbd2feff": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_de5f59c14acc4e76874fe9a86a3ad367",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": "100%",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_bc14e0a10023423d83aa4dc683b6c129"
          }
        },
        "075109c51ce84f4dbc6943693832cd7f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_8e8b3d03c6624afa8efc21e6dfcdf8f4",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 46830571,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 46830571,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_ea2c0636a6f54743bb2a9109fce8d931"
          }
        },
        "3931783d126d40e2a3f50b3854bbbb42": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_4d3a80989d44491e9ddd5618d32a4a9d",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 44.7M/44.7M [00:00&lt;00:00, 98.1MB/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_77a0b02dd7d646df94ea5971d21157ba"
          }
        },
        "de5f59c14acc4e76874fe9a86a3ad367": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "bc14e0a10023423d83aa4dc683b6c129": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "8e8b3d03c6624afa8efc21e6dfcdf8f4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "ea2c0636a6f54743bb2a9109fce8d931": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4d3a80989d44491e9ddd5618d32a4a9d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "77a0b02dd7d646df94ea5971d21157ba": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        }
      }
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "j_q9bCbnULi0",
        "outputId": "b77a4cdd-2f4b-491e-8bf5-f87b0e97cffd"
      },
      "source": [
        "#Using Kaggle API to import database\n",
        "! pip install kaggle\n",
        "! mkdir ~/.kaggle\n",
        "! cp kaggle.json ~/.kaggle/\n",
        "! chmod 600 ~/.kaggle/kaggle.json"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: kaggle in /usr/local/lib/python3.7/dist-packages (1.5.12)\n",
            "Requirement already satisfied: certifi in /usr/local/lib/python3.7/dist-packages (from kaggle) (2021.10.8)\n",
            "Requirement already satisfied: tqdm in /usr/local/lib/python3.7/dist-packages (from kaggle) (4.62.3)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from kaggle) (2.23.0)\n",
            "Requirement already satisfied: python-slugify in /usr/local/lib/python3.7/dist-packages (from kaggle) (5.0.2)\n",
            "Requirement already satisfied: six>=1.10 in /usr/local/lib/python3.7/dist-packages (from kaggle) (1.15.0)\n",
            "Requirement already satisfied: urllib3 in /usr/local/lib/python3.7/dist-packages (from kaggle) (1.24.3)\n",
            "Requirement already satisfied: python-dateutil in /usr/local/lib/python3.7/dist-packages (from kaggle) (2.8.2)\n",
            "Requirement already satisfied: text-unidecode>=1.3 in /usr/local/lib/python3.7/dist-packages (from python-slugify->kaggle) (1.3)\n",
            "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->kaggle) (2.10)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->kaggle) (3.0.4)\n",
            "mkdir: cannot create directory ‘/root/.kaggle’: File exists\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kNdKicSFWbAc",
        "outputId": "72caea77-961f-4135-8fbe-a264c5db1bfc"
      },
      "source": [
        "#Giving permissions for kaggle.json\n",
        "! kaggle datasets download techsash/waste-classification-data \n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Downloading waste-classification-data.zip to /content\n",
            " 98% 417M/427M [00:09<00:00, 41.5MB/s]\n",
            "100% 427M/427M [00:09<00:00, 44.9MB/s]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RZEKWO9_Xp2H",
        "outputId": "8d593cbe-b07d-4572-dc9e-1d113826dcec"
      },
      "source": [
        "! unzip waste-classification-data.zip\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1;30;43mStreaming output truncated to the last 5000 lines.\u001b[0m\n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5499.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_55.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_550.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5500.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5501.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5502.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5503.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5504.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5505.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5506.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5507.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5508.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5509.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_551.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5510.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5511.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5512.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5513.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5514.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5515.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5516.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5517.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5518.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5519.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_552.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5520.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5521.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5522.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5523.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5524.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5525.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5526.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5527.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5528.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5529.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_553.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5530.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5531.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5532.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5533.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5534.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5535.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5536.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5537.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5538.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5539.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_554.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5540.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5541.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5542.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5543.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5544.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5545.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5546.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5547.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5548.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5549.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_555.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5550.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5551.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5552.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5553.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5554.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5555.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5556.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5557.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5558.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5559.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_556.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5560.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5561.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5562.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5563.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5564.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5565.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5566.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5567.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5568.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5569.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_557.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5570.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5571.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5572.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5573.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5574.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5575.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5576.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5577.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5578.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5579.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_558.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5580.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5581.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5582.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5583.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5584.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5585.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5586.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5587.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5588.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5589.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_559.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5590.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5591.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5592.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5593.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5594.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5595.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5596.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5597.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5598.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5599.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_56.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_560.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5600.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5601.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5602.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5603.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5604.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5605.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5606.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5607.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5608.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5609.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_561.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5610.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5611.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5612.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5613.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5614.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5615.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5616.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5617.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5618.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5619.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_562.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5620.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5621.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5622.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5623.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5624.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5625.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5626.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5627.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5628.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5629.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_563.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5630.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5631.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5632.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5633.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5634.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5635.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5636.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5637.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5638.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5639.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_564.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5640.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5641.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5642.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5643.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5644.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5645.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5646.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5647.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5648.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5649.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_565.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5650.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5651.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5652.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5653.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5654.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5655.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5656.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5657.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5658.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5659.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_566.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5660.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5661.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5662.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5663.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5664.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5665.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5666.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5667.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5668.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5669.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_567.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5670.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5671.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5672.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5673.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5674.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5675.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5676.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5677.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5678.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5679.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_568.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5680.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5681.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5682.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5683.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5684.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5685.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5686.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5687.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5688.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5689.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_569.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5690.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5691.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5692.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5693.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5694.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5695.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5696.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5697.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5698.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5699.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_57.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_570.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5700.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5701.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5702.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5703.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5704.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5705.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5706.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5707.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5708.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5709.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_571.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5710.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5711.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5712.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5713.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5714.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5715.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5716.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5717.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5718.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5719.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_572.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5720.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5721.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5722.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5723.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5724.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5725.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5726.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5727.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5728.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5729.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_573.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5730.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5731.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5732.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5733.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5734.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5735.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5736.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5737.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5738.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5739.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_574.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5740.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5741.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5742.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5743.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5744.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5745.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5746.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5747.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5748.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5749.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_575.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5750.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5751.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5752.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5753.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5754.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5755.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5756.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5757.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5758.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5759.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_576.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5760.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5761.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5762.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5763.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5764.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5765.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5766.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5767.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5768.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5769.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_577.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5770.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5771.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5772.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5773.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5774.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5775.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5776.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5777.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5778.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5779.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_578.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5780.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5781.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5782.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5783.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5784.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5785.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5786.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5787.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5788.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5789.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_579.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5790.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5791.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5792.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5793.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5794.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5795.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5796.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5797.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5798.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5799.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_58.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_580.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5800.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5801.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5802.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5803.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5804.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5805.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5806.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5807.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5808.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5809.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_581.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5810.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5811.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5812.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5813.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5814.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5815.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5816.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5817.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5818.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5819.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_582.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5820.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5821.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5822.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5823.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5824.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5825.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5826.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5827.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5828.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5829.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_583.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5830.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5831.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5832.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5833.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5834.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5835.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5836.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5837.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5838.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5839.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_584.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5840.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5841.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5842.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5843.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5844.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5845.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5846.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5847.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5848.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5849.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_585.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5850.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5851.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5852.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5853.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5854.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5855.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5856.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5857.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5858.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5859.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_586.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5860.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5861.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5862.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5863.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5864.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5865.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5866.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5867.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5868.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5869.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_587.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5870.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5871.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5872.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5873.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5874.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5875.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5876.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5877.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5878.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5879.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_588.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5880.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5881.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5882.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5883.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5884.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5885.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5886.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5887.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5888.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5889.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_589.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5890.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5891.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5892.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5893.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5894.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5895.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5896.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5897.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5898.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5899.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_59.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_590.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5900.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5901.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5902.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5903.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5904.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5905.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5906.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5907.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5908.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5909.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_591.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5910.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5911.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5912.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5913.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5914.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5915.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5916.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5917.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5918.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5919.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_592.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5920.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5921.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5922.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5923.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5924.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5925.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5926.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5927.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5928.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5929.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_593.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5930.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5931.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5932.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5933.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5934.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5935.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5936.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5937.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5938.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5939.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_594.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5940.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5941.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5942.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5943.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5944.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5945.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5946.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5947.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5948.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5949.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_595.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5950.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5951.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5952.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5953.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5954.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5955.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5956.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5957.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5958.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5959.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_596.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5960.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5961.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5962.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5963.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5964.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5965.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5966.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5967.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5968.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5969.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_597.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5970.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5971.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5972.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5973.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5974.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5975.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5976.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5977.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5978.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5979.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_598.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5980.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5981.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5982.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5983.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5984.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5985.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5986.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5987.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5988.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5989.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_599.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5990.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5991.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5992.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5993.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5994.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5995.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5996.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5997.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5998.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_5999.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_60.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_600.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6000.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6001.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6002.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6003.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6004.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6005.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6006.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6007.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6008.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6009.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_601.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6010.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6011.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6012.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6013.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6014.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6015.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6016.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6017.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6018.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6019.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_602.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6020.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6021.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6022.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6023.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6024.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6025.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6026.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6027.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6028.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6029.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_603.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6030.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6031.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6032.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6033.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6034.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6035.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6036.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6037.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6038.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6039.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_604.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6040.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6041.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6042.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6043.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6044.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6045.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6046.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6047.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6048.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6049.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_605.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6050.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6051.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6052.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6053.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6054.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6055.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6056.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6057.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6058.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6059.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_606.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6060.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6061.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6062.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6063.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6064.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6065.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6066.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6067.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6068.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6069.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_607.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6070.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6071.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6072.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6073.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6074.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6075.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6076.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6077.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6078.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6079.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_608.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6080.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6081.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6082.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6083.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6084.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6085.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6086.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6087.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6088.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6089.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_609.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6090.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6091.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6092.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6093.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6094.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6095.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6096.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6097.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6098.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6099.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_61.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_610.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6100.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6101.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6102.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6103.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6104.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6105.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6106.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6107.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6108.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6109.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_611.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6110.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6111.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6112.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6113.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6114.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6115.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6116.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6117.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6118.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6119.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_612.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6120.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6121.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6122.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6123.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6124.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6125.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6126.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6127.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6128.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6129.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_613.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6130.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6131.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6132.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6133.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6134.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6135.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6136.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6137.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6138.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6139.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_614.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6140.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6141.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6142.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6143.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6144.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6145.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6146.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6147.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6148.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6149.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_615.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6150.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6151.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6152.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6153.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6154.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6155.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6156.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6157.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6158.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6159.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_616.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6160.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6161.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6162.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6163.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6164.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6165.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6166.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6167.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6168.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6169.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_617.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6170.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6171.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6172.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6173.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6174.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6175.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6176.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6177.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6178.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6179.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_618.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6180.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6181.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6182.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6183.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6184.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6185.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6186.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6187.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6188.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6189.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_619.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6190.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6191.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6192.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6193.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6194.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6195.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6196.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6197.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6198.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6199.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_62.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_620.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6200.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6201.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6202.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6203.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6204.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6205.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6206.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6207.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6208.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6209.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_621.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6210.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6211.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6212.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6213.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6214.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6215.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6216.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6217.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6218.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6219.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_622.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6220.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6221.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6222.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6223.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6224.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6225.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6226.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6227.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6228.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6229.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_623.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6230.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6231.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6232.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6233.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6234.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6235.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6236.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6237.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6238.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6239.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_624.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6240.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6241.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6242.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6243.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6244.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6245.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6246.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6247.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6248.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6249.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_625.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6250.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6251.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6252.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6253.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6254.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6255.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6256.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6257.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6258.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6259.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_626.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6260.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6261.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6262.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6263.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6264.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6265.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6266.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6267.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6268.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6269.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_627.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6270.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6271.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6272.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6273.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6274.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6275.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6276.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6277.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6278.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6279.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_628.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6280.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6281.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6282.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6283.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6284.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6285.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6286.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6287.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6288.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6289.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_629.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6290.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6291.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6292.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6293.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6294.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6295.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6296.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6297.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6298.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6299.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_63.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_630.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6300.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6301.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6302.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6303.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6304.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6305.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6306.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6307.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6308.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6309.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_631.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6310.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6311.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6312.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6313.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6314.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6315.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6316.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6317.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6318.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6319.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_632.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6320.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6321.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6322.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6323.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6324.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6325.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6326.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6327.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6328.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6329.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_633.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6330.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6331.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6332.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6333.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6334.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6335.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6336.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6337.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6338.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6339.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_634.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6340.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6341.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6342.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6343.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6344.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6345.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6346.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6347.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6348.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6349.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_635.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6350.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6351.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6352.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6353.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6354.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6355.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6356.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6357.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6358.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6359.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_636.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6360.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6361.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6362.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6363.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6364.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6365.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6366.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6367.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6368.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6369.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_637.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6370.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6371.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6372.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6373.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6374.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6375.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6376.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6377.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6378.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6379.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_638.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6380.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6381.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6382.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6383.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6384.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6385.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6386.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6387.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6388.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6389.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_639.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6390.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6391.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6392.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6393.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6394.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6395.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6396.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6397.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6398.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6399.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_64.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_640.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6400.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6401.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6402.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6403.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6404.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6405.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6406.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6407.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6408.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6409.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_641.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6410.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6411.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6412.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6413.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6414.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6415.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6416.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6417.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6418.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6419.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_642.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6420.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6421.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6422.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6423.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6424.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6425.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6426.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6427.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6428.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6429.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_643.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6430.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6431.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6432.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6433.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6434.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6435.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6436.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6437.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6438.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6439.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_644.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6440.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6441.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6442.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6443.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6444.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6445.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6446.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6447.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6448.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6449.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_645.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6450.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6451.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6452.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6453.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6454.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6455.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6456.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6457.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6458.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6459.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_646.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6460.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6461.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6462.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6463.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6464.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6465.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6466.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6467.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6468.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6469.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_647.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6470.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6471.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6472.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6473.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6474.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6475.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6476.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6477.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6478.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6479.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_648.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6480.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6481.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6482.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6483.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6484.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6485.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6486.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6487.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6488.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6489.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_649.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6490.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6491.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6492.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6493.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6494.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6495.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6496.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6497.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6498.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6499.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_65.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_650.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6500.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6501.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6502.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6503.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6504.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6505.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6506.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6507.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6508.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6509.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_651.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6510.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6511.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6512.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6513.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6514.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6515.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6516.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6517.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6518.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6519.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_652.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6520.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6521.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6522.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6523.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6524.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6525.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6526.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6527.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6528.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6529.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_653.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6530.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6531.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6532.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6533.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6534.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6535.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6536.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6537.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6538.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6539.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_654.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6540.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6541.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6542.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6543.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6544.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6545.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6546.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6547.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6548.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6549.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_655.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6550.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6551.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6552.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6553.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6554.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6555.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6556.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6557.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6558.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6559.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_656.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6560.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6561.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6562.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6563.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6564.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6565.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6566.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6567.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6568.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6569.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_657.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6570.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6571.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6572.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6573.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6574.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6575.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6576.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6577.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6578.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6579.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_658.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6580.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6581.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6582.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6583.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6584.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6585.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6586.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6587.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6588.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6589.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_659.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6590.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6591.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6592.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6593.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6594.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6595.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6596.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6597.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6598.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6599.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_66.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_660.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6600.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6601.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6602.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6603.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6604.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6605.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6606.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6607.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6608.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6609.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_661.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6610.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6611.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6612.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6613.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6614.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6615.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6616.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6617.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6618.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6619.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_662.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6620.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6621.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6622.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6623.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6624.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6625.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6626.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6627.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6628.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6629.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_663.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6630.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6631.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6632.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6633.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6634.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6635.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6636.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6637.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6638.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6639.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_664.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6640.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6641.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6642.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6643.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6644.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6645.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6646.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6647.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6648.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6649.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_665.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6650.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6651.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6652.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6653.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6654.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6655.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6656.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6657.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6658.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6659.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_666.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6660.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6661.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6662.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6663.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6664.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6665.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6666.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6667.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6668.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6669.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_667.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6670.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6671.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6672.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6673.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6674.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6675.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6676.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6677.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6678.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6679.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_668.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6680.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6681.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6682.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6683.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6684.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6685.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6686.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6687.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6688.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6689.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_669.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6690.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6691.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6692.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6693.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6694.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6695.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6696.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6697.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6698.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6699.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_67.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_670.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6700.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6701.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6702.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6703.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6704.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6705.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6706.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6707.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6708.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6709.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_671.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6710.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6711.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6712.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6713.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6714.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6715.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6716.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6717.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6718.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6719.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_672.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6720.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6721.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6722.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6723.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6724.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6725.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6726.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6727.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6728.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6729.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_673.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6730.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6731.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6732.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6733.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6734.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6735.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6736.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6737.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6738.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6739.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_674.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6740.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6741.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6742.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6743.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6744.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6745.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6746.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6747.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6748.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6749.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_675.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6750.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6751.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6752.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6753.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6754.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6755.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6756.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6757.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6758.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6759.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_676.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6760.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6761.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6762.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6763.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6764.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6765.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6766.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6767.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6768.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6769.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_677.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6770.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6771.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6772.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6773.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6774.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6775.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6776.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6777.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6778.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6779.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_678.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6780.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6781.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6782.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6783.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6784.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6785.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6786.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6787.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6788.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6789.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_679.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6790.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6791.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6792.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6793.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6794.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6795.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6796.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6797.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6798.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6799.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_68.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_680.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6800.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6801.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6802.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6803.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6804.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6805.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6806.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6807.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6808.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6809.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_681.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6810.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6811.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6812.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6813.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6814.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6815.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6816.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6817.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6818.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6819.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_682.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6820.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6821.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6822.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6823.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6824.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6825.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6826.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6827.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6828.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6829.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_683.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6830.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6831.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6832.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6833.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6834.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6835.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6836.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6837.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6838.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6839.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_684.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6840.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6841.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6842.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6843.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6844.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6845.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6846.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6847.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6848.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6849.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_685.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6850.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6851.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6852.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6853.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6854.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6855.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6856.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6857.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6858.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6859.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_686.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6860.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6861.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6862.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6863.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6864.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6865.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6866.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6867.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6868.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6869.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_687.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6870.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6871.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6872.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6873.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6874.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6875.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6876.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6877.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6878.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6879.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_688.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6880.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6881.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6882.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6883.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6884.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6885.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6886.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6887.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6888.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6889.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_689.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6890.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6891.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6892.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6893.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6894.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6895.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6896.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6897.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6898.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6899.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_69.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_690.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6900.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6901.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6902.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6903.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6904.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6905.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6906.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6907.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6908.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6909.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_691.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6910.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6911.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6912.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6913.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6914.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6915.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6916.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6917.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6918.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6919.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_692.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6920.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6921.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6922.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6923.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6924.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6925.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6926.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6927.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6928.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6929.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_693.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6930.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6931.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6932.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6933.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6934.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6935.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6936.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6937.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6938.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6939.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_694.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6940.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6941.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6942.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6943.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6944.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6945.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6946.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6947.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6948.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6949.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_695.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6950.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6951.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6952.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6953.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6954.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6955.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6956.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6957.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6958.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6959.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_696.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6960.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6961.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6962.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6963.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6964.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6965.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6966.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6967.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6968.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6969.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_697.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6970.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6971.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6972.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6973.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6974.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6975.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6976.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6977.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6978.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6979.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_698.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6980.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6981.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6982.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6983.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6984.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6985.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6986.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6987.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6988.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6989.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_699.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6990.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6991.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6992.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6993.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6994.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6995.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6996.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6997.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6998.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_6999.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_70.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_700.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7000.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7001.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7002.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7003.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7004.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7005.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7006.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7007.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7008.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7009.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_701.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7010.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7011.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7012.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7013.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7014.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7015.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7016.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7017.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7018.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7019.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_702.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7020.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7021.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7022.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7023.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7024.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7025.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7026.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7027.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7028.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7029.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_703.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7030.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7031.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7032.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7033.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7034.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7035.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7036.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7037.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7038.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7039.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_704.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7040.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7041.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7042.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7043.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7044.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7045.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7046.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7047.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7048.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7049.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_705.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7050.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7051.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7052.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7053.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7054.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7055.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7056.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7057.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7058.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7059.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_706.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7060.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7061.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7062.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7063.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7064.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7065.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7066.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7067.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7068.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7069.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_707.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7070.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7071.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7072.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7073.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7074.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7075.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7076.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7077.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7078.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7079.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_708.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7080.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7081.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7082.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7083.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7084.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7085.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7086.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7087.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7088.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7089.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_709.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7090.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7091.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7092.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7093.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7094.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7095.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7096.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7097.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7098.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7099.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_71.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_710.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7100.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7101.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7102.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7103.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7104.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7105.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7106.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7107.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7108.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7109.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_711.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7110.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7111.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7112.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7113.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7114.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7115.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7116.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7117.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7118.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7119.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_712.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7120.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7121.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7122.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7123.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7124.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7125.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7126.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7127.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7128.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7129.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_713.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7130.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7131.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7132.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7133.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7134.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7135.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7136.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7137.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7138.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7139.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_714.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7140.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7141.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7142.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7143.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7144.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7145.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7146.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7147.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7148.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7149.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_715.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7150.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7151.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7152.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7153.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7154.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7155.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7156.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7157.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7158.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7159.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_716.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7160.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7161.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7162.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7163.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7164.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7165.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7166.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7167.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7168.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7169.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_717.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7170.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7171.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7172.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7173.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7174.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7175.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7176.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7177.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7178.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7179.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_718.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7180.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7181.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7182.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7183.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7184.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7185.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7186.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7187.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7188.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7189.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_719.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7190.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7191.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7192.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7193.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7194.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7195.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7196.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7197.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7198.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7199.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_72.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_720.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7200.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7201.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7202.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7203.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7204.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7205.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7206.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7207.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7208.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7209.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_721.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7210.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7211.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7212.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7213.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7214.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7215.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7216.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7217.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7218.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7219.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_722.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7220.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7221.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7222.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7223.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7224.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7225.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7226.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7227.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7228.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7229.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_723.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7230.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7231.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7232.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7233.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7234.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7235.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7236.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7237.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7238.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7239.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_724.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7240.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7241.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7242.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7243.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7244.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7245.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7246.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7247.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7248.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7249.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_725.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7250.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7251.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7252.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7253.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7254.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7255.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7256.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7257.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7258.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7259.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_726.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7260.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7261.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7262.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7263.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7264.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7265.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7266.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7267.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7268.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7269.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_727.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7270.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7271.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7272.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7273.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7274.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7275.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7276.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7277.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7278.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7279.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_728.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7280.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7281.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7282.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7283.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7284.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7285.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7286.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7287.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7288.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7289.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_729.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7290.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7291.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7292.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7293.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7294.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7295.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7296.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7297.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7298.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7299.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_73.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_730.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7300.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7301.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7302.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7303.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7304.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7305.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7306.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7307.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7308.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7309.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_731.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7310.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7311.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7312.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7313.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7314.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7315.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7316.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7317.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7318.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7319.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_732.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7320.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7321.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7322.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7323.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7324.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7325.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7326.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7327.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7328.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7329.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_733.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7330.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7331.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7332.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7333.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7334.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7335.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7336.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7337.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7338.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7339.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_734.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7340.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7341.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7342.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7343.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7344.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7345.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7346.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7347.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7348.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7349.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_735.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7350.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7351.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7352.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7353.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7354.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7355.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7356.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7357.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7358.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7359.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_736.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7360.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7361.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7362.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7363.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7364.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7365.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7366.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7367.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7368.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7369.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_737.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7370.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7371.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7372.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7373.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7374.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7375.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7376.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7377.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7378.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7379.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_738.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7380.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7381.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7382.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7383.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7384.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7385.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7386.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7387.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7388.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7389.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_739.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7390.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7391.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7392.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7393.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7394.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7395.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7396.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7397.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7398.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7399.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_74.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_740.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7400.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7401.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7402.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7403.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7404.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7405.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7406.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7407.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7408.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7409.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_741.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7410.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7411.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7412.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7413.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7414.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7415.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7416.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7417.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7418.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7419.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_742.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7420.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7421.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7422.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7423.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7424.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7425.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7426.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7427.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7428.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7429.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_743.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7430.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7431.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7432.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7433.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7434.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7435.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7436.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7437.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7438.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7439.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_744.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7440.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7441.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7442.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7443.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7444.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7445.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7446.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7447.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7448.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7449.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_745.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7450.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7451.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7452.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7453.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7454.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7455.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7456.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7457.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7458.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7459.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_746.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7460.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7461.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7462.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7463.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7464.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7465.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7466.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7467.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7468.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7469.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_747.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7470.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7471.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7472.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7473.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7474.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7475.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7476.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7477.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7478.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7479.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_748.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7480.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7481.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7482.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7483.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7484.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7485.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7486.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7487.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7488.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7489.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_749.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7490.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7491.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7492.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7493.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7494.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7495.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7496.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7497.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7498.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7499.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_75.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_750.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7500.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7501.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7502.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7503.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7504.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7505.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7506.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7507.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7508.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7509.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_751.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7510.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7511.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7512.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7513.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7514.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7515.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7516.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7517.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7518.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7519.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_752.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7520.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7521.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7522.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7523.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7524.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7525.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7526.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7527.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7528.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7529.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_753.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7530.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7531.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7532.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7533.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7534.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7535.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7536.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7537.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7538.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7539.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_754.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7540.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7541.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7542.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7543.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7544.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7545.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7546.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7547.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7548.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7549.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_755.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7550.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7551.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7552.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7553.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7554.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7555.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7556.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7557.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7558.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7559.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_756.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7560.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7561.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7562.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7563.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7564.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7565.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7566.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7567.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7568.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7569.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_757.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7570.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7571.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7572.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7573.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7574.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7575.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7576.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7577.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7578.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7579.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_758.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7580.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7581.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7582.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7583.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7584.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7585.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7586.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7587.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7588.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7589.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_759.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7590.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7591.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7592.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7593.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7594.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7595.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7596.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7597.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7598.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7599.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_76.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_760.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7600.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7601.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7602.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7603.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7604.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7605.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7606.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7607.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7608.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7609.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_761.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7610.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7611.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7612.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7613.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7614.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7615.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7616.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7617.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7618.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7619.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_762.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7620.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7621.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7622.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7623.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7624.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7625.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7626.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7627.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7628.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7629.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_763.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7630.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7631.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7632.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7633.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7634.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7635.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7636.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7637.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7638.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7639.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_764.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7640.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7641.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7642.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7643.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7644.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7645.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7646.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7647.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7648.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7649.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_765.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7650.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7651.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7652.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7653.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7654.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7655.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7656.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7657.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7658.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7659.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_766.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7660.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7661.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7662.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7663.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7664.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7665.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7666.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7667.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7668.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7669.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_767.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7670.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7671.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7672.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7673.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7674.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7675.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7676.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7677.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7678.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7679.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_768.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7680.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7681.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7682.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7683.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7684.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7685.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7686.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7687.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7688.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7689.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_769.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7690.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7691.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7692.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7693.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7694.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7695.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7696.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7697.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7698.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7699.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_77.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_770.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7700.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7701.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7702.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7703.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7704.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7705.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7706.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7707.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7708.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7709.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_771.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7710.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7711.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7712.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7713.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7714.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7715.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7716.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7717.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7718.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7719.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_772.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7720.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7721.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7722.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7723.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7724.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7725.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7726.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7727.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7728.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7729.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_773.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7730.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7731.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7732.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7733.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7734.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7735.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7736.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7737.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7738.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7739.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_774.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7740.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7741.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7742.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7743.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7744.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7745.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7746.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7747.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7748.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7749.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_775.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7750.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7751.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7752.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7753.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7754.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7755.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7756.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7757.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7758.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7759.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_776.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7760.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7761.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7762.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7763.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7764.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7765.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7766.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7767.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7768.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7769.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_777.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7770.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7771.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7772.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7773.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7774.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7775.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7776.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7777.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7778.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7779.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_778.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7780.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7781.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7782.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7783.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7784.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7785.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7786.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7787.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7788.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7789.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_779.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7790.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7791.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7792.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7793.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7794.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7795.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7796.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7797.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7798.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7799.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_78.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_780.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7800.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7801.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7802.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7803.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7804.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7805.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7806.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7807.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7808.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7809.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_781.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7810.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7811.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7812.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7813.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7814.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7815.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7816.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7817.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7818.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7819.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_782.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7820.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7821.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7822.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7823.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7824.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7825.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7826.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7827.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7828.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7829.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_783.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7830.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7831.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7832.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7833.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7834.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7835.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7836.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7837.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7838.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7839.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_784.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7840.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7841.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7842.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7843.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7844.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7845.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7846.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7847.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7848.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7849.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_785.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7850.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7851.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7852.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7853.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7854.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7855.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7856.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7857.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7858.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7859.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_786.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7860.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7861.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7862.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7863.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7864.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7865.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7866.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7867.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7868.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7869.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_787.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7870.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7871.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7872.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7873.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7874.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7875.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7876.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7877.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7878.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7879.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_788.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7880.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7881.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7882.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7883.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7884.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7885.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7886.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7887.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7888.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7889.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_789.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7890.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7891.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7892.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7893.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7894.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7895.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7896.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7897.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7898.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7899.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_79.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_790.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7900.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7901.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7902.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7903.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7904.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7905.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7906.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7907.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7908.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7909.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_791.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7910.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7911.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7912.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7913.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7914.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7915.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7916.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7917.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7918.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7919.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_792.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7920.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7921.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7922.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7923.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7924.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7925.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7926.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7927.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7928.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7929.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_793.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7930.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7931.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7932.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7933.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7934.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7935.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7936.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7937.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7938.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7939.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_794.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7940.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7941.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7942.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7943.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7944.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7945.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7946.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7947.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7948.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7949.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_795.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7950.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7951.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7952.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7953.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7954.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7955.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7956.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7957.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7958.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7959.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_796.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7960.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7961.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7962.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7963.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7964.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7965.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7966.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7967.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7968.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7969.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_797.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7970.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7971.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7972.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7973.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7974.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7975.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7976.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7977.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7978.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7979.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_798.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7980.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7981.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7982.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7983.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7984.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7985.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7986.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7987.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7988.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7989.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_799.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7990.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7991.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7992.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7993.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7994.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7995.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7996.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7997.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7998.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_7999.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_80.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_800.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8000.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8001.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8002.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8003.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8004.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8005.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8006.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8007.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8008.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8009.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_801.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8010.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8011.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8012.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8013.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8014.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8015.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8016.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8017.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8018.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8019.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_802.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8020.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8021.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8022.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8023.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8024.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8025.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8026.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8027.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8028.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8029.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_803.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8030.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8031.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8032.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8033.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8034.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8035.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8036.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8037.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8038.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8039.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_804.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8040.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8041.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8042.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8043.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8044.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8045.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8046.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8047.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8048.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8049.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_805.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8050.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8051.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8052.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8053.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8054.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8055.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8056.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8057.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8058.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8059.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_806.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8060.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8061.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8062.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8063.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8064.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8065.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8066.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8067.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8068.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8069.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_807.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8070.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8071.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8072.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8073.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8074.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8075.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8076.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8077.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8078.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8079.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_808.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8080.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8081.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8082.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8083.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8084.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8085.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8086.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8087.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8088.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8089.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_809.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8090.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8091.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8092.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8093.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8094.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8095.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8096.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8097.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8098.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8099.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_81.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_810.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8100.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8101.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8102.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8103.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8104.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8105.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8106.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8107.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8108.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8109.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_811.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8110.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8111.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8112.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8113.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8114.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8115.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8116.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8117.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8118.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8119.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_812.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8120.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8121.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8122.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8123.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8124.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8125.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8126.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8127.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8128.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8129.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_813.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8130.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8131.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8132.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8133.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8134.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8135.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8136.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8137.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8138.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8139.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_814.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8140.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8141.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8142.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8143.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8144.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8145.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8146.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8147.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8148.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8149.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_815.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8150.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8151.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8152.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8153.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8154.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8155.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8156.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8157.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8158.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8159.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_816.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8160.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8161.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8162.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8163.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8164.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8165.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8166.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8167.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8168.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8169.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_817.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8170.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8171.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8172.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8173.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8174.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8175.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8176.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8177.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8178.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8179.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_818.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8180.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8181.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8182.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8183.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8184.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8185.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8186.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8187.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8188.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8189.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_819.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8190.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8191.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8192.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8193.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8194.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8195.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8196.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8197.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8198.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8199.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_82.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_820.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8200.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8201.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8202.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8203.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8204.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8205.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8206.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8207.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8208.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8209.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_821.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8210.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8211.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8212.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8213.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8214.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8215.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8216.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8217.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8218.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8219.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_822.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8220.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8221.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8222.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8223.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8224.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8225.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8226.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8227.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8228.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8229.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_823.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8230.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8231.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8232.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8233.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8234.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8235.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8236.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8237.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8238.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8239.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_824.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8240.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8241.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8242.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8243.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8244.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8245.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8246.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8247.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8248.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8249.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_825.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8250.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8251.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8252.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8253.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8254.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8255.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8256.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8257.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8258.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8259.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_826.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8260.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8261.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8262.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8263.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8264.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8265.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8266.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8267.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8268.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8269.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_827.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8270.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8271.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8272.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8273.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8274.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8275.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8276.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8277.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8278.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8279.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_828.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8280.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8281.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8282.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8283.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8284.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8285.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8286.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8287.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8288.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8289.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_829.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8290.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8291.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8292.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8293.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8294.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8295.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8296.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8297.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8298.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8299.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_83.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_830.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8300.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8301.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8302.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8303.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8304.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8305.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8306.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8307.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8308.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8309.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_831.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8310.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8311.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8312.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8313.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8314.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8315.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8316.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8317.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8318.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8319.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_832.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8320.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8321.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8322.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8323.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8324.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8325.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8326.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8327.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8328.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8329.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_833.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8330.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8331.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8332.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8333.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8334.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8335.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8336.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8337.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8338.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8339.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_834.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8340.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8341.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8342.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8343.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8344.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8345.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8346.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8347.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8348.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8349.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_835.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8350.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8351.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8352.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8353.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8354.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8355.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8356.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8357.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8358.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8359.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_836.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8360.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8361.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8362.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8363.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8364.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8365.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8366.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8367.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8368.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8369.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_837.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8370.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8371.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8372.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8373.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8374.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8375.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8376.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8377.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8378.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8379.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_838.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8380.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8381.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8382.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8383.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8384.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8385.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8386.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8387.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8388.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8389.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_839.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8390.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8391.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8392.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8393.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8394.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8395.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8396.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8397.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8398.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8399.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_84.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_840.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8400.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8401.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8402.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8403.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8404.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8405.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8406.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8407.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8408.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8409.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_841.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8410.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8411.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8412.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8413.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8414.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8415.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8416.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8417.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8418.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8419.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_842.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8420.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8421.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8422.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8423.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8424.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8425.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8426.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8427.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8428.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8429.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_843.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8430.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8431.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8432.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8433.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8434.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8435.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8436.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8437.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8438.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8439.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_844.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8440.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8441.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8442.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8443.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8444.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8445.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8446.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8447.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8448.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8449.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_845.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8450.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8451.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8452.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8453.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8454.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8455.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8456.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8457.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8458.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8459.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_846.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8460.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8461.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8462.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8463.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8464.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8465.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8466.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8467.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8468.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8469.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_847.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8470.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8471.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8472.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8473.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8474.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8475.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8476.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8477.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8478.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8479.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_848.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8480.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8481.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8482.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8483.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8484.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8485.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8486.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8487.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8488.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8489.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_849.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8490.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8491.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8492.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8493.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8494.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8495.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8496.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8497.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8498.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8499.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_85.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_850.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8500.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8501.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8502.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8503.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8504.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8505.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8506.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8507.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8508.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8509.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_851.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8510.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8511.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8512.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8513.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8514.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8515.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8516.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8517.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8518.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8519.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_852.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8520.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8521.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8522.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8523.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8524.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8525.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8526.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8527.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8528.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8529.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_853.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8530.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8531.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8532.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8533.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8534.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8535.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8536.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8537.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8538.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8539.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_854.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8540.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8541.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8542.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8543.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8544.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8545.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8546.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8547.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8548.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8549.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_855.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8550.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8551.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8552.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8553.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8554.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8555.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8556.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8557.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8558.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8559.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_856.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8560.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8561.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8562.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8563.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8564.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8565.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8566.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8567.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8568.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8569.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_857.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8570.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8571.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8572.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8573.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8574.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8575.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8576.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8577.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8578.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8579.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_858.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8580.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8581.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8582.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8583.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8584.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8585.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8586.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8587.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8588.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8589.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_859.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8590.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8591.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8592.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8593.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8594.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8595.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8596.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8597.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8598.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8599.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_86.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_860.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8600.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8601.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8602.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8603.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8604.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8605.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8606.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8607.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8608.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8609.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_861.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8610.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8611.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8612.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8613.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8614.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8615.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8616.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8617.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8618.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8619.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_862.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8620.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8621.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8622.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8623.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8624.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8625.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8626.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8627.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8628.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8629.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_863.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8630.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8631.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8632.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8633.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8634.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8635.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8636.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8637.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8638.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8639.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_864.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8640.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8641.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8642.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8643.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8644.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8645.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8646.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8647.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8648.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8649.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_865.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8650.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8651.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8652.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8653.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8654.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8655.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8656.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8657.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8658.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8659.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_866.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8660.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8661.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8662.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8663.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8664.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8665.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8666.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8667.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8668.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8669.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_867.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8670.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8671.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8672.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8673.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8674.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8675.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8676.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8677.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8678.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8679.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_868.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8680.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8681.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8682.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8683.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8684.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8685.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8686.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8687.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8688.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8689.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_869.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8690.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8691.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8692.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8693.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8694.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8695.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8696.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8697.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8698.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8699.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_87.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_870.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8700.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8701.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8702.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8703.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8704.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8705.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8706.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8707.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8708.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8709.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_871.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8710.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8711.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8712.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8713.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8714.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8715.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8716.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8717.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8718.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8719.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_872.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8720.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8721.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8722.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8723.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8724.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8725.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8726.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8727.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8728.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8729.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_873.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8730.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8731.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8732.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8733.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8734.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8735.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8736.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8737.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8738.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8739.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_874.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8740.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8741.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8742.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8743.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8744.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8745.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8746.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8747.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8748.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8749.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_875.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8750.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8751.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8752.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8753.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8754.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8755.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8756.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8757.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8758.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8759.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_876.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8760.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8761.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8762.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8763.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8764.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8765.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8766.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8767.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8768.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8769.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_877.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8770.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8771.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8772.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8773.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8774.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8775.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8776.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8777.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8778.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8779.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_878.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8780.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8781.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8782.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8783.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8784.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8785.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8786.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8787.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8788.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8789.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_879.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8790.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8791.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8792.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8793.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8794.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8795.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8796.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8797.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8798.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8799.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_88.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_880.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8800.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8801.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8802.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8803.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8804.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8805.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8806.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8807.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8808.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8809.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_881.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8810.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8811.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8812.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8813.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8814.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8815.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8816.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8817.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8818.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8819.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_882.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8820.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8821.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8822.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8823.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8824.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8825.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8826.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8827.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8828.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8829.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_883.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8830.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8831.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8832.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8833.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8834.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8835.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8836.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8837.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8838.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8839.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_884.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8840.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8841.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8842.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8843.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8844.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8845.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8846.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8847.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8848.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8849.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_885.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8850.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8851.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8852.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8853.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8854.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8855.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8856.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8857.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8858.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8859.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_886.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8860.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8861.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8862.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8863.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8864.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8865.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8866.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8867.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8868.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8869.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_887.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8870.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8871.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8872.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8873.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8874.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8875.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8876.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8877.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8878.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8879.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_888.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8880.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8881.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8882.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8883.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8884.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8885.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8886.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8887.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8888.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8889.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_889.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8890.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8891.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8892.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8893.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8894.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8895.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8896.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8897.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8898.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8899.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_89.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_890.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8900.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8901.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8902.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8903.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8904.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8905.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8906.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8907.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8908.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8909.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_891.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8910.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8911.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8912.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8913.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8914.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8915.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8916.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8917.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8918.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8919.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_892.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8920.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8921.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8922.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8923.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8924.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8925.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8926.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8927.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8928.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8929.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_893.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8930.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8931.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8932.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8933.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8934.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8935.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8936.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8937.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8938.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8939.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_894.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8940.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8941.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8942.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8943.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8944.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8945.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8946.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8947.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8948.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8949.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_895.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8950.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8951.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8952.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8953.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8954.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8955.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8956.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8957.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8958.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8959.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_896.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8960.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8961.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8962.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8963.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8964.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8965.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8966.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8967.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8968.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8969.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_897.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8970.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8971.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8972.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8973.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8974.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8975.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8976.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8977.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8978.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8979.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_898.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8980.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8981.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8982.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8983.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8984.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8985.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8986.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8987.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8988.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8989.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_899.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8990.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8991.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8992.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8993.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8994.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8995.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8996.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8997.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8998.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_8999.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_90.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_900.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9000.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9001.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9002.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9003.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9004.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9005.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9006.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9007.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9008.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9009.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_901.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9010.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9011.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9012.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9013.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9014.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9015.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9016.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9017.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9018.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9019.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_902.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9020.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9021.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9022.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9023.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9024.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9025.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9026.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9027.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9028.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9029.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_903.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9030.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9031.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9032.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9033.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9034.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9035.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9036.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9037.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9038.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9039.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_904.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9040.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9041.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9042.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9043.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9044.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9045.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9046.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9047.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9048.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9049.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_905.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9050.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9051.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9052.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9053.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9054.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9055.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9056.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9057.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9058.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9059.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_906.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9060.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9061.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9062.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9063.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9064.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9065.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9066.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9067.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9068.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9069.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_907.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9070.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9071.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9072.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9073.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9074.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9075.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9076.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9077.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9078.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9079.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_908.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9080.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9081.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9082.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9083.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9084.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9085.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9086.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9087.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9088.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9089.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_909.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9090.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9091.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9092.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9093.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9094.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9095.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9096.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9097.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9098.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9099.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_91.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_910.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9100.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9101.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9102.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9103.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9104.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9105.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9106.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9107.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9108.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9109.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_911.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9110.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9111.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9112.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9113.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9114.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9115.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9116.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9117.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9118.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9119.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_912.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9120.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9121.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9122.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9123.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9124.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9125.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9126.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9127.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9128.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9129.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_913.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9130.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9131.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9132.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9133.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9134.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9135.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9136.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9137.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9138.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9139.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_914.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9140.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9141.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9142.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9143.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9144.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9145.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9146.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9147.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9148.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9149.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_915.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9150.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9151.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9152.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9153.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9154.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9155.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9156.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9157.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9158.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9159.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_916.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9160.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9161.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9162.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9163.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9164.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9165.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9166.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9167.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9168.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9169.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_917.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9170.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9171.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9172.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9173.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9174.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9175.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9176.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9177.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9178.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9179.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_918.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9180.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9181.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9182.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9183.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9184.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9185.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9186.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9187.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9188.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9189.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_919.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9190.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9191.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9192.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9193.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9194.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9195.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9196.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9197.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9198.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9199.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_92.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_920.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9200.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9201.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9202.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9203.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9204.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9205.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9206.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9207.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9208.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9209.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_921.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9210.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9211.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9212.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9213.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9214.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9215.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9216.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9217.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9218.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9219.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_922.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9220.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9221.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9222.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9223.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9224.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9225.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9226.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9227.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9228.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9229.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_923.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9230.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9231.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9232.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9233.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9234.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9235.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9236.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9237.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9238.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9239.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_924.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9240.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9241.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9242.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9243.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9244.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9245.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9246.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9247.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9248.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9249.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_925.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9250.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9251.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9252.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9253.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9254.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9255.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9256.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9257.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9258.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9259.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_926.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9260.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9261.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9262.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9263.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9264.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9265.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9266.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9267.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9268.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9269.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_927.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9270.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9271.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9272.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9273.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9274.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9275.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9276.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9277.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9278.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9279.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_928.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9280.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9281.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9282.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9283.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9284.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9285.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9286.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9287.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9288.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9289.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_929.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9290.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9291.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9292.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9293.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9294.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9295.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9296.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9297.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9298.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9299.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_93.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_930.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9300.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9301.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9302.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9303.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9304.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9305.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9306.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9307.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9308.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9309.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_931.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9310.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9311.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9312.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9313.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9314.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9315.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9316.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9317.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9318.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9319.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_932.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9320.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9321.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9322.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9323.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9324.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9325.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9326.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9327.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9328.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9329.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_933.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9330.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9331.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9332.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9333.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9334.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9335.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9336.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9337.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9338.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9339.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_934.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9340.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9341.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9342.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9343.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9344.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9345.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9346.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9347.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9348.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9349.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_935.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9350.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9351.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9352.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9353.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9354.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9355.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9356.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9357.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9358.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9359.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_936.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9360.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9361.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9362.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9363.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9364.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9365.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9366.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9367.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9368.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9369.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_937.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9370.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9371.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9372.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9373.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9374.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9375.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9376.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9377.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9378.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9379.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_938.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9380.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9381.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9382.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9383.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9384.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9385.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9386.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9387.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9388.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9389.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_939.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9390.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9391.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9392.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9393.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9394.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9395.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9396.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9397.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9398.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9399.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_94.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_940.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9400.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9401.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9402.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9403.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9404.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9405.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9406.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9407.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9408.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9409.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_941.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9410.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9411.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9412.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9413.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9414.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9415.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9416.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9417.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9418.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9419.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_942.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9420.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9421.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9422.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9423.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9424.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9425.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9426.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9427.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9428.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9429.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_943.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9430.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9431.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9432.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9433.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9434.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9435.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9436.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9437.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9438.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9439.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_944.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9440.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9441.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9442.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9443.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9444.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9445.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9446.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9447.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9448.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9449.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_945.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9450.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9451.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9452.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9453.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9454.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9455.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9456.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9457.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9458.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9459.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_946.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9460.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9461.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9462.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9463.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9464.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9465.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9466.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9467.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9468.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9469.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_947.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9470.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9471.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9472.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9473.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9474.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9475.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9476.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9477.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9478.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9479.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_948.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9480.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9481.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9482.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9483.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9484.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9485.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9486.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9487.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9488.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9489.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_949.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9490.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9491.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9492.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9493.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9494.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9495.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9496.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9497.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9498.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9499.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_95.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_950.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9500.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9501.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9502.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9503.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9504.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9505.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9506.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9507.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9508.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9509.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_951.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9510.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9511.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9512.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9513.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9514.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9515.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9516.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9517.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9518.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9519.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_952.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9520.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9521.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9522.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9523.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9524.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9525.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9526.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9527.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9528.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9529.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_953.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9530.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9531.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9532.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9533.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9534.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9535.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9536.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9537.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9538.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9539.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_954.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9540.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9541.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9542.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9543.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9544.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9545.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9546.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9547.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9548.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9549.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_955.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9550.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9551.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9552.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9553.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9554.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9555.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9556.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9557.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9558.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9559.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_956.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9560.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9561.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9562.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9563.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9564.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9565.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9566.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9567.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9568.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9569.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_957.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9570.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9571.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9572.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9573.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9574.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9575.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9576.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9577.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9578.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9579.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_958.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9580.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9581.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9582.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9583.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9584.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9585.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9586.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9587.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9588.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9589.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_959.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9590.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9591.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9592.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9593.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9594.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9595.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9596.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9597.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9598.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9599.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_96.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_960.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9600.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9601.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9602.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9603.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9604.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9605.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9606.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9607.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9608.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9609.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_961.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9610.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9611.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9612.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9613.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9614.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9615.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9616.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9617.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9618.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9619.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_962.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9620.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9621.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9622.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9623.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9624.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9625.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9626.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9627.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9628.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9629.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_963.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9630.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9631.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9632.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9633.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9634.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9635.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9636.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9637.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9638.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9639.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_964.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9640.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9641.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9642.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9643.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9644.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9645.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9646.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9647.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9648.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9649.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_965.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9650.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9651.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9652.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9653.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9654.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9655.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9656.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9657.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9658.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9659.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_966.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9660.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9661.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9662.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9663.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9664.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9665.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9666.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9667.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9668.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9669.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_967.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9670.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9671.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9672.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9673.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9674.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9675.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9676.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9677.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9678.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9679.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_968.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9680.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9681.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9682.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9683.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9684.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9685.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9686.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9687.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9688.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9689.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_969.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9690.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9691.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9692.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9693.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9694.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9695.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9696.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9697.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9698.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9699.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_97.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_970.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9700.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9701.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9702.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9703.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9704.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9705.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9706.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9707.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9708.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9709.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_971.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9710.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9711.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9712.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9713.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9714.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9715.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9716.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9717.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9718.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9719.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_972.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9720.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9721.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9722.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9723.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9724.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9725.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9726.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9727.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9728.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9729.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_973.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9730.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9731.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9732.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9733.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9734.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9735.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9736.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9737.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9738.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9739.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_974.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9740.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9741.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9742.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9743.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9744.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9745.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9746.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9747.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9748.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9749.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_975.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9750.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9751.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9752.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9753.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9754.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9755.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9756.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9757.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9758.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9759.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_976.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9760.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9761.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9762.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9763.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9764.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9765.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9766.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9767.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9768.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9769.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_977.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9770.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9771.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9772.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9773.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9774.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9775.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9776.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9777.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9778.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9779.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_978.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9780.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9781.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9782.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9783.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9784.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9785.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9786.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9787.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9788.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9789.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_979.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9790.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9791.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9792.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9793.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9794.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9795.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9796.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9797.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9798.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9799.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_98.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_980.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9800.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9801.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9802.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9803.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9804.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9805.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9806.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9807.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9808.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9809.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_981.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9810.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9811.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9812.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9813.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9814.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9815.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9816.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9817.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9818.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9819.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_982.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9820.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9821.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9822.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9823.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9824.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9825.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9826.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9827.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9828.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9829.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_983.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9830.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9831.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9832.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9833.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9834.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9835.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9836.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9837.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9838.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9839.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_984.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9840.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9841.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9842.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9843.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9844.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9845.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9846.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9847.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9848.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9849.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_985.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9850.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9851.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9852.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9853.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9854.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9855.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9856.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9857.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9858.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9859.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_986.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9860.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9861.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9862.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9863.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9864.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9865.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9866.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9867.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9868.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9869.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_987.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9870.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9871.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9872.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9873.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9874.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9875.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9876.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9877.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9878.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9879.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_988.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9880.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9881.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9882.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9883.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9884.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9885.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9886.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9887.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9888.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9889.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_989.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9890.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9891.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9892.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9893.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9894.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9895.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9896.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9897.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9898.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9899.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_99.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_990.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9900.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9901.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9902.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9903.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9904.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9905.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9906.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9907.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9908.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9909.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_991.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9910.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9911.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9912.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9913.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9914.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9915.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9916.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9917.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9918.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9919.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_992.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9920.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9921.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9922.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9923.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9924.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9925.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9926.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9927.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9928.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9929.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_993.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9930.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9931.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9932.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9933.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9934.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9935.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9936.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9937.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9938.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9939.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_994.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9940.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9941.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9942.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9943.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9944.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9945.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9946.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9947.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9948.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9949.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_995.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9950.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9951.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9952.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9953.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9954.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9955.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9956.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9957.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9958.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9959.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_996.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9960.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9961.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9962.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9963.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9964.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9965.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9966.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9967.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9968.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9969.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_997.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9970.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9971.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9972.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9973.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9974.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9975.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9976.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9977.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9978.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9979.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_998.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9980.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9981.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9982.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9983.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9984.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9985.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9986.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9987.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9988.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9989.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_999.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9990.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9991.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9992.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9993.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9994.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9995.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9996.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9997.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9998.jpg  \n",
            "  inflating: dataset/DATASET/TRAIN/R/R_9999.jpg  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Mu7nVsUeYF0h"
      },
      "source": [
        "#Imports \n",
        "import torch\n",
        "import numpy as np\n",
        "import torch.nn as nn\n",
        "import torchvision\n",
        "from torchvision import datasets, models, transforms\n",
        "import torch.optim as optim\n",
        "import matplotlib.pyplot as plt\n",
        "from torch.utils.data.sampler import SubsetRandomSampler"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Gg4wx4utdTKo"
      },
      "source": [
        "#Getting training and test data\n",
        "classes = ['O', 'R']\n",
        "train_dir = r'/content/dataset/DATASET/TRAIN'\n",
        "test_dir = r'/content/dataset/DATASET/TEST'"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "P1nyOT4Ifhk0"
      },
      "source": [
        "#Data augmentation Normalizing and transforming the data\n",
        "#This is done to fit the pretrained models used\n",
        "\n",
        "normalize = transforms.Normalize(mean=[0.485, 0.456, 0.406],\n",
        "                                 std=[0.229, 0.224, 0.225])\n",
        "\n",
        "transform = transforms.Compose([transforms.RandomResizedCrop(224),\n",
        "                               transforms.RandomHorizontalFlip(),\n",
        "                               transforms.ToTensor(),\n",
        "                               normalize])\n",
        "\n",
        "train_data = datasets.ImageFolder(train_dir, transform=transform)\n",
        "test_data = datasets.ImageFolder(test_dir, transform=transform)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yrqEb2rUxkJg",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "faffa4bb-f2ed-41bd-987a-47023adfb3f4"
      },
      "source": [
        "print(len(train_data))\n",
        "print(len(test_data))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "22564\n",
            "2513\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5GxqqJty0Et-"
      },
      "source": [
        "# number of samples in the batch\n",
        "batch_size = 20\n",
        "# percentage of training set to use for cross-validation\n",
        "valid_size = 0.2"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "P7l32FJv3IJd"
      },
      "source": [
        "# creating random indices of training data length \n",
        "size_train = len(train_data)\n",
        "indices = list(range(size_train))\n",
        "np.random.shuffle(indices)\n",
        "split = int(np.floor(valid_size * size_train))\n",
        "\n",
        "# creating random samplers based on above indices\n",
        "train_indices, valid_indices = indices[split:], indices[:split]\n",
        "train_sampler = SubsetRandomSampler(train_indices)\n",
        "valid_sampler = SubsetRandomSampler(valid_indices)\n",
        "\n",
        "# creating data loaders on the training data with specified batch size and sampler\n",
        "train_loader = torch.utils.data.DataLoader(train_data, batch_size=batch_size,\n",
        "    sampler=train_sampler)\n",
        "valid_loader = torch.utils.data.DataLoader(train_data, batch_size=batch_size, \n",
        "    sampler=valid_sampler)\n",
        "test_loader = torch.utils.data.DataLoader(test_data, batch_size=batch_size)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QAj6HozR5Jta",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7a0b594e-e385-47e2-b1b1-c2f0f22fd0b5"
      },
      "source": [
        "print(len(train_loader)) #number of batches"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "903\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Q9Z_gTo25b2H"
      },
      "source": [
        "import matplotlib.pyplot as plt\n",
        "%matplotlib inline\n",
        "\n",
        "# helper function to un-normalize and display an image\n",
        "def imshow(img):\n",
        "    img = img / 2 + 0.5  # unnormalize\n",
        "    plt.imshow(np.transpose(img, (1, 2, 0))) "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vLykX4--5c1b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 594
        },
        "outputId": "f935de0e-9bf6-4909-a1df-e0a1b5729a3a"
      },
      "source": [
        "# obtain one batch of training images\n",
        "dataiter = iter(train_loader)\n",
        "images, labels = dataiter.next()\n",
        "images = images.numpy() # convert images to numpy for display\n",
        "\n",
        "# plot the images in the batch, along with the corresponding labels\n",
        "fig = plt.figure(figsize=(25, 4))\n",
        "# display 20 images\n",
        "for idx in np.arange(20):\n",
        "    ax = fig.add_subplot(2, 20/2, idx+1, xticks=[], yticks=[])\n",
        "    imshow(images[idx])\n",
        "    ax.set_title(classes[labels[idx]])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 1800x288 with 20 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JDy0y3SC7yIk",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 318
        },
        "outputId": "acacb550-7210-4b82-86aa-0505a85a2aed"
      },
      "source": [
        "batch = next(iter(train_loader))\n",
        "print(batch[0].shape)\n",
        "plt.imshow(batch[0][0].permute(1, 2, 0))\n",
        "print(batch[1][0])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "torch.Size([20, 3, 224, 224])\n",
            "tensor(1)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "O1HPnUChJzCR",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 66,
          "referenced_widgets": [
            "683a758ec5b04a0b9dae4ff583e1b543",
            "248a4a9870f04fa28ac53b69ba5b607c",
            "452761f46d0d40c7ad7c3a614e21f235",
            "70199fa661bc45e68cdaa441b68ce383",
            "45caae4356ea4eacbe565e3adf2ffb4c",
            "ca8eb812629a4cbab70fa3917b82adfe",
            "77b48205c62b4a7b945a69228b963aee",
            "d1730842accf48bb85b1c41d58ce9dd0",
            "7370a75ee8dc4288bfb1a332b8e9e46f",
            "c381ce036996433b8f9c7e99fc769c80",
            "81063fb497424e7185e5591c540b3618"
          ]
        },
        "outputId": "a895f825-dcde-43af-aae6-cac609fe4adc"
      },
      "source": [
        "#Using pretrained densenet121 model\n",
        "densenet121 = models.densenet121(pretrained=True)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Downloading: \"https://download.pytorch.org/models/densenet121-a639ec97.pth\" to /root/.cache/torch/hub/checkpoints/densenet121-a639ec97.pth\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "683a758ec5b04a0b9dae4ff583e1b543",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "  0%|          | 0.00/30.8M [00:00<?, ?B/s]"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ABrUmR8qk9JO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 66,
          "referenced_widgets": [
            "20e02203390b42e0a6a1d16b06979f2c",
            "56c7f52eabc24bbcb4985ef262dd863b",
            "e01c45271c14468cb406e9b7f2624094",
            "08f304a2511f4204a1d718545a57d52d",
            "c88828de85104934ad4bb959a37ebc9d",
            "22360497d60d43f6920aed81b1d12f58",
            "c542bf13e41640be8ac71651a5958cf0",
            "c831c9d24a834bb183a7c22c01785579",
            "2e120aa2741e408096961b400ca85195",
            "e16413ec098045df802c0bb23c5e1eda",
            "2919ee1bbd9b403e81c36d0de2fd4f19"
          ]
        },
        "outputId": "eece39fa-9a7e-4455-bef9-7b961a821ab1"
      },
      "source": [
        "#Using VGG-16 model \n",
        "vgg16 = models.vgg16(pretrained=True)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Downloading: \"https://download.pytorch.org/models/vgg16-397923af.pth\" to /root/.cache/torch/hub/checkpoints/vgg16-397923af.pth\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "20e02203390b42e0a6a1d16b06979f2c",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "  0%|          | 0.00/528M [00:00<?, ?B/s]"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6SyFZRIisxT1",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 66,
          "referenced_widgets": [
            "a31c8a0e791840e49f88666e45ac2af9",
            "fd6b7b4294a04c098387ec2990d40920",
            "f5391721ddff4c2da76af863fbd2feff",
            "075109c51ce84f4dbc6943693832cd7f",
            "3931783d126d40e2a3f50b3854bbbb42",
            "de5f59c14acc4e76874fe9a86a3ad367",
            "bc14e0a10023423d83aa4dc683b6c129",
            "8e8b3d03c6624afa8efc21e6dfcdf8f4",
            "ea2c0636a6f54743bb2a9109fce8d931",
            "4d3a80989d44491e9ddd5618d32a4a9d",
            "77a0b02dd7d646df94ea5971d21157ba"
          ]
        },
        "outputId": "a58daf54-937d-4fda-b59c-982f906a18f4"
      },
      "source": [
        "resnet18 = models.resnet18(pretrained=True)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Downloading: \"https://download.pytorch.org/models/resnet18-f37072fd.pth\" to /root/.cache/torch/hub/checkpoints/resnet18-f37072fd.pth\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "a31c8a0e791840e49f88666e45ac2af9",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "  0%|          | 0.00/44.7M [00:00<?, ?B/s]"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "v86AJOgmmFJX"
      },
      "source": [
        "#Model selector\n",
        "model = densenet121"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Tv5NxIEgDGBA",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "44137e14-2209-4421-fc31-9f9246645733"
      },
      "source": [
        "device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
        "    \n",
        "#Model specific changes\n",
        "if model == densenet121:\n",
        "  \n",
        "  # Freeze parameters so we don't backprop through them\n",
        "  for param in model.parameters():\n",
        "      param.requires_grad = False\n",
        "  model.classifier = nn.Sequential(nn.Linear(1024, 256),\n",
        "                                nn.ReLU(),\n",
        "                                nn.Dropout(0.2),\n",
        "                                nn.Linear(256, 2),\n",
        "                                  nn.LogSoftmax(dim=1))\n",
        "  #Loss function selection\n",
        "  criterion = nn.NLLLoss()\n",
        "\n",
        "  # Only train the classifier parameters, feature parameters are frozen\n",
        "  optimizer = optim.Adam(model.classifier.parameters(), lr=0.003)\n",
        "\n",
        "elif model == vgg16:\n",
        "\n",
        "  # Freeze parameters so we don't backprop through them\n",
        "  for param in model.features.parameters():\n",
        "    param.requires_grad = False\n",
        "\n",
        "  n_inputs = model.classifier[6].in_features\n",
        "  last_layer = nn.Linear(n_inputs, 2)\n",
        "  model.classifier[6] = last_layer\n",
        "\n",
        "  criterion = nn.CrossEntropyLoss()\n",
        "  optimizer = optim.SGD(vgg16.classifier.parameters(), lr=0.001)\n",
        "\n",
        "elif model == resnet18:\n",
        "\n",
        "  # Freeze parameters so we don't backprop through them\n",
        "  def set_parameter_requires_grad(model, feature_extracting=True):\n",
        "    if feature_extracting:\n",
        "        for param in model.parameters():\n",
        "            param.requires_grad = False\n",
        "            \n",
        "  set_parameter_requires_grad(resnet18) \n",
        "\n",
        "  model.fc = nn.Linear(512, 2)\n",
        "  criterion = nn.CrossEntropyLoss()\n",
        "\n",
        "  # Only train the classifier parameters, feature parameters are frozen\n",
        "  params_to_update = []\n",
        "  for name,param in model.named_parameters():\n",
        "      if param.requires_grad == True:\n",
        "          params_to_update.append(param)\n",
        "              \n",
        "  optimizer = optim.Adam(params_to_update)\n",
        "\n",
        "model.to(device)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "DenseNet(\n",
              "  (features): Sequential(\n",
              "    (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\n",
              "    (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "    (relu0): ReLU(inplace=True)\n",
              "    (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\n",
              "    (denseblock1): _DenseBlock(\n",
              "      (denselayer1): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer2): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer3): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer4): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer5): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer6): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "    )\n",
              "    (transition1): _Transition(\n",
              "      (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "      (relu): ReLU(inplace=True)\n",
              "      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)\n",
              "    )\n",
              "    (denseblock2): _DenseBlock(\n",
              "      (denselayer1): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer2): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer3): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer4): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer5): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer6): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer7): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer8): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer9): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer10): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer11): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer12): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "    )\n",
              "    (transition2): _Transition(\n",
              "      (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "      (relu): ReLU(inplace=True)\n",
              "      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)\n",
              "    )\n",
              "    (denseblock3): _DenseBlock(\n",
              "      (denselayer1): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer2): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer3): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer4): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer5): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer6): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer7): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer8): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer9): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer10): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer11): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer12): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer13): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer14): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer15): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer16): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer17): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer18): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer19): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer20): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer21): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer22): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer23): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer24): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "    )\n",
              "    (transition3): _Transition(\n",
              "      (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "      (relu): ReLU(inplace=True)\n",
              "      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)\n",
              "    )\n",
              "    (denseblock4): _DenseBlock(\n",
              "      (denselayer1): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer2): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer3): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer4): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer5): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer6): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer7): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer8): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer9): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer10): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer11): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer12): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer13): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer14): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer15): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "      (denselayer16): _DenseLayer(\n",
              "        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu1): ReLU(inplace=True)\n",
              "        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n",
              "        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "        (relu2): ReLU(inplace=True)\n",
              "        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
              "      )\n",
              "    )\n",
              "    (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
              "  )\n",
              "  (classifier): Sequential(\n",
              "    (0): Linear(in_features=1024, out_features=256, bias=True)\n",
              "    (1): ReLU()\n",
              "    (2): Dropout(p=0.2, inplace=False)\n",
              "    (3): Linear(in_features=256, out_features=2, bias=True)\n",
              "    (4): LogSoftmax(dim=1)\n",
              "  )\n",
              ")"
            ]
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PyALnJZax7rN"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eQemfyDSDj80",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "18088702-57d8-4498-a8b4-994ebb68c98e"
      },
      "source": [
        "from tqdm import tqdm\n",
        "\n",
        "# number of epochs to train the model\n",
        "n_epochs = 1\n",
        "train_on_gpu = torch.cuda.is_available()\n",
        "valid_loss_min = np.Inf\n",
        "\n",
        "for epoch in range(1, n_epochs+1):\n",
        "\n",
        "    # keep track of training and validation loss\n",
        "    train_loss = 0.0\n",
        "    valid_loss = 0.0\n",
        "    \n",
        "    ###################\n",
        "    # train the model #\n",
        "    ###################\n",
        "    if model == densenet121:\n",
        "      model.train()\n",
        "    for batch_i, (data, target) in enumerate(tqdm(train_loader)):\n",
        "        if train_on_gpu:\n",
        "           data, target = data.cuda(), target.cuda()\n",
        "        optimizer.zero_grad()\n",
        "        output = model(data)\n",
        "        loss = criterion(output, target)\n",
        "        loss.backward()\n",
        "        optimizer.step()\n",
        "        train_loss += loss.item()*data.size(0)\n",
        "        \n",
        "    ######################    \n",
        "    # validate the model #\n",
        "    ######################\n",
        "    model.eval()\n",
        "    for batch_i, (data, target) in enumerate(tqdm(valid_loader)):\n",
        "        if train_on_gpu:\n",
        "            data, target = data.cuda(), target.cuda()\n",
        "        output = model(data)\n",
        "        loss = criterion(output, target)\n",
        "        valid_loss += loss.item()*data.size(0)\n",
        "    \n",
        "    # calculate average losses\n",
        "    train_loss = train_loss/len(train_loader.sampler)\n",
        "    valid_loss = valid_loss/len(valid_loader.sampler)\n",
        "        \n",
        "    # print training/validation statistics \n",
        "    print('Epoch: {} \\tTraining Loss: {:.6f} \\tValidation Loss: {:.6f}'.format(\n",
        "        epoch, train_loss, valid_loss))\n",
        "    # save model if validation loss has decreased\n",
        "    if valid_loss <= valid_loss_min:\n",
        "        print('Validation loss decreased ({:.6f} --> {:.6f}).  Saving model ...'.format(\n",
        "        valid_loss_min,\n",
        "        valid_loss))\n",
        "        torch.save(model.state_dict(), 'vgg.pt') #Save model as name \n",
        "        valid_loss_min = valid_loss"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 903/903 [03:37<00:00,  4.15it/s]\n",
            "100%|██████████| 226/226 [00:51<00:00,  4.35it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch: 1 \tTraining Loss: 0.278992 \tValidation Loss: 0.199335\n",
            "Validation loss decreased (inf --> 0.199335).  Saving model ...\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "A_Ue-bcxM3at",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4f812706-fef2-4dea-ed0f-73f973e744c7"
      },
      "source": [
        "model.load_state_dict(torch.load('hardnet.pt'))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<All keys matched successfully>"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "S7ksYKyR-vMm",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0f15fa65-336e-4297-a244-9c0e5b330f67"
      },
      "source": [
        "# track test loss\n",
        "test_loss = 0.0\n",
        "class_correct = list(0. for i in range(10))\n",
        "class_total = list(0. for i in range(10))\n",
        "\n",
        "model.eval()\n",
        "# iterate over test data\n",
        "for batch_i, (data, target) in enumerate(tqdm(test_loader)):\n",
        "    if train_on_gpu:\n",
        "        data, target = data.cuda(), target.cuda()\n",
        "    output = model(data)\n",
        "    loss = criterion(output, target)\n",
        "    test_loss += loss.item()*data.size(0)\n",
        "\n",
        "    # convert output probabilities to predicted class\n",
        "    _, pred = torch.max(output, 1)    \n",
        "\n",
        "    # compare predictions to true label\n",
        "    correct_tensor = pred.eq(target.data.view_as(pred))\n",
        "    correct = np.squeeze(correct_tensor.numpy()) if not train_on_gpu else np.squeeze(correct_tensor.cpu().numpy())\n",
        "\n",
        "    # calculate test accuracy for each object class\n",
        "    for i in range(2):\n",
        "        label = target.data[i]\n",
        "        class_correct[label] += correct[i].item()\n",
        "        class_total[label] += 1\n",
        "\n",
        "# average test loss\n",
        "test_loss = test_loss/len(test_loader.dataset)\n",
        "print('Test Loss: {:.6f}\\n'.format(test_loss))\n",
        "\n",
        "for i in range(2):\n",
        "    if class_total[i] > 0:\n",
        "        print('Test Accuracy of %5s: %2d%% (%2d/%2d)' % (\n",
        "            classes[i], 100 * class_correct[i] / class_total[i],\n",
        "            np.sum(class_correct[i]), np.sum(class_total[i])))\n",
        "    else:\n",
        "        print('Test Accuracy of %5s: N/A (no training examples)' % (classes[i]))\n",
        "\n",
        "print('\\nTest Accuracy (Overall): %2d%% (%2d/%2d)' % (\n",
        "    100. * np.sum(class_correct) / np.sum(class_total),\n",
        "    np.sum(class_correct), np.sum(class_total)))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 126/126 [00:17<00:00,  7.23it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Test Loss: 0.226775\n",
            "\n",
            "Test Accuracy of     O: 99% (140/141)\n",
            "Test Accuracy of     R: 86% (96/111)\n",
            "\n",
            "Test Accuracy (Overall): 93% (236/252)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ruZXQBN1Usit",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 523
        },
        "outputId": "c651542a-8757-4a12-c7af-046db48cb5a3"
      },
      "source": [
        "#visualize results\n",
        "\n",
        "# obtain one batch of test images\n",
        "dataiter = iter(test_loader)\n",
        "images, labels = dataiter.next()\n",
        "images.numpy()\n",
        "\n",
        "# move model inputs to cuda, if GPU available\n",
        "if train_on_gpu:\n",
        "    images = images.cuda()\n",
        "\n",
        "# get sample outputs\n",
        "output = model(images)\n",
        "# convert output probabilities to predicted class\n",
        "_, preds_tensor = torch.max(output, 1)\n",
        "preds = np.squeeze(preds_tensor.numpy()) if not train_on_gpu else np.squeeze(preds_tensor.cpu().numpy())\n",
        "\n",
        "# plot the images in the batch, along with predicted and true labels\n",
        "fig = plt.figure(figsize=(25, 4))\n",
        "for image in range(batch_size):\n",
        "    ax = fig.add_subplot(2, 20/2, image+1, xticks=[], yticks=[])\n",
        "    plt.imshow(np.transpose(images[image].cpu(), (1, 2, 0)))\n",
        "    ax.set_title(\"{} ({})\".format(classes[preds[image]], classes[labels[image]]),\n",
        "                 color=(\"green\" if preds[image]==labels[image].item() else \"red\"))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n",
            "Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1800x288 with 20 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    }
  ]
}